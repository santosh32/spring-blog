<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">

	<context:annotation-config />

	<context:component-scan base-package="in.spring4buddies.application.*" />

	<!-- We don't need to this; This is required only in annotation based AOP 
		support -->
	<!-- <aop:aspectj-autoproxy /> -->

	<aop:config>

		<aop:pointcut id="loggingPointcuts"
			expression="execution(* in.spring4buddies.application.service.*.*(..))" />

		<aop:aspect id="loggingAspect" ref="loggingAspect">
			<aop:before pointcut-ref="loggingPointcuts" method="logBefore" />
			<aop:after pointcut-ref="loggingPointcuts" method="logAfter" />
			<aop:after-returning method="logAfterReturning" pointcut-ref="loggingPointcuts" returning="retVal" />
			<aop:after-throwing method="logAfterThrowing" pointcut-ref="loggingPointcuts" throwing="ex" />
			<aop:around method="logAround" pointcut-ref="loggingPointcuts" />
		</aop:aspect>

	</aop:config>

	<bean id="loggingAspect" class="in.spring4buddies.application.aop.LoggingAspect" />

</beans>